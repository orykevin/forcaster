{"version":3,"file":"static/css/main.d449e123.css","mappings":"AAwFA,gBAGA,CC3FA,EAGE,kCAFA,SACA,SACA,CAEF,KAEE,+CADA,aAEA,kBC8gBE,yBChhBJ,aAEQ,cAEA,iBADA,SACA,EAGR,iBAEI,aACA,gBAFA,UAEA,CAEJ,QACI,aDmgBA,yBCpgBJ,QAIQ,8BACA,cAFA,SAEA,EAEJ,WAEI,WAGA,eAJA,gBAEA,kBACA,UACA,CDwfJ,yBC7fA,WAQQ,qBADA,eACA,EAGR,YAKI,eAHA,kBAEA,WADA,QAAQ,CAFR,UAIA,CD6eJ,wBClfA,YAOQ,kBD2eR,yBClfA,YAWQ,qBADA,kBAEA,OAKZ,mBAGI,WAFA,gBACA,iBACA,CD8dA,yBCjeJ,mBAOQ,mBADA,gBADA,SAEA,EAEJ,qBACI,eDudJ,yBCxdA,qBAGQ,gBAGR,sBACI,gBDidJ,yBCldA,sBAGQ,iBAGR,wBACI,eACA,kBAEJ,sBACI,eACA,mBDscJ,yBCxcA,sBAIQ,gBAKZ,aAEI,WAIA,eAFA,oBAAyB,CAHzB,kBAEA,WAEA,SACA,CAEA,iBAEI,cADA,WAEA,UAEJ,eACI,kBAGR,QACI,eACA,0DAEJ,OAOI,YADA,mBAGA,YACA,eAPA,eACA,gBA9GA,SA4GA,gBAGA,kBAhHA,kBAEA,8DA0GA,SASA,CDgaA,yBC1aJ,OAgBO,mBAFA,QAFC,kBAGD,SAFC,uDAGD,EAGP,kBASI,2BACA,mCAFA,wEAIA,qCALA,mBAIA,mBAEA,wCARA,aAlIA,SAmIA,uBASA,oBA7IA,kBA+HA,SA7HA,mCA+HA,2BACA,UAUA,SACA,CDwYA,yBCvZJ,kBAmBQ,aAEA,sBADA,eAFA,aAMD,SAPC,gBAMD,UADC,uDAED,EAEH,kCAGI,WADA,mBADA,SAEA,CD0XJ,yBC7XA,kCAMQ,aADA,eACA,EAEJ,qCAEI,eACA,mBAFA,UAEA,CDkXR,yBCrXI,qCAKQ,eAGR,oCAEQ,eALA,CAQR,4CACI,aACJ,8CAEI,eADA,WACA,CDoWR,yBCtWI,8CAIQ,eACA,aAGR,iDACI,aD6VR,yBC9VI,iDAGQ,eACA,aAMhB,qCACI,aACI,gBCnMR,kBAMI,2BACA,mCAFA,wEADA,aAFA,kBAMA,KAAI,CALJ,WAFA,SAOA,CACA,uBAGI,WAIA,eAFA,eADA,gBAHA,kBAKA,WAJA,QAKA,CFqgBJ,wBE5gBA,uBASQ,kBFmgBR,yBE5gBA,uBAYQ,SAIZ,aAQI,sBADA,mBAJA,aAGA,cAJA,gBAOA,eALA,kBACA,SAJA,SAQA,CACA,gBACI,eAEA,oBADA,iBACA,CAEJ,gBACI,eACA,cAEJ,eAII,cAHA,cACA,cACA,oBACA,CAEJ,8BAGI,YACA,SAFA,kBAGA,8DAJA,UAIA,CACA,iCAEI,QAAO,CADP,iBACA,CAEJ,gCAEI,eADA,iBACA,CC7DZ,aAII,sBADA,YAIA,kBANA,kBAIA,MAHA,WAIA,SACA,CACA,uBAEA,gBADA,UACA,CACI,2BAWA,eARA,OACA,cAHA,kBACA,SAGA,0DACA,UAKA,CH8fJ,yBGzgBI,2BAQI,eACA,UAIJ,0BACA,eACA,cACA,kBHyfJ,yBG5fI,0BAKI,gBAGR,0BAEA,aADA,eACA,CACI,6BACA,sBAEA,iCAEA,iBACA,iBAAiB,CAEjB,gBAJA,aAGA,eACA,CHyeJ,yBG9eI,iCAOI,mBAbR,0BAkBQ,eADA,eACA,CALA,CASZ,aACI,aACA,eAGA,iBADA,gBADA,UAEA,CAEJ,YAKI,yDADA,mBAEA,WAEA,eADA,aAJA,YAMA,wBARA,kBACA,WAOA,CACA,wBACI,WACA,2BAEI,eADA,qBACA,CAEJ,0BACI,eAEA,gBADA,mBACA,CAGR,uBAEI,qBADA,UACA,CACA,2BAKI,2BACA,mCAFA,wEAIA,qCADA,kBAEA,yCARA,cAEA,kBADA,UAOA,CAEJ,yBACI,eACA,gBACA,kBAIZ,QACI,iBAEA,gBADA,eACA,CAGJ,YACI,aACA,eACA,YAEJ,mBASI,0BACA,kCAFA,wEAIA,sCALA,mBAIA,mBAEA,wCARA,aAHA,SAIA,uBASA,oBAdA,SAEA,8DACA,UAUA,SACA,CHkZA,yBGjaJ,mBAmBQ,cADA,aAGD,SAJC,gBAGD,UAEA,+DAEH,mCAGI,WADA,cADA,SAEA,CHsYJ,yBGzYA,mCAMQ,aADA,eACA,EAEJ,sCAEI,eACA,mBAFA,UAEA,CH8XR,yBGjYI,sCAKQ,eAGR,qCAEQ,eALA,CAQR,6CACI,aACJ,+CAEI,eADA,WACA,CHgXR,yBGlXI,+CAIQ,eACA,aAGR,kDACI,aHyWR,yBG1WI,kDAGQ,eACA,aAMhB,WAII,WADA,iBAEA,kBAHA,SADA,WAIA,CH2VA,yBGhWJ,WAOQ,SACA,aAGR,kBAGI,WAFA,eACA,gBAEA,kBHiVA,yBGrVJ,kBAMQ,eACA,oBAGR,iBAKI,yDAIA,mBALA,aAGA,SANA,kBACA,SAAS,CAMT,4DALA,YAGA,UAGA,CHkUA,yBG3UJ,iBAYQ,aACA,SAAQ,CAFR,WAES,CAAT,CAGR,WAEI,WAIA,eAHA,gBAFA,kBAGA,WACA,QACA,CAGJ,aACI,SAEJ,YAGI,mBADA,eAAe,CADf,SAEA,CH4SA,wBG/SJ,YAKQ,eAAe,CAAf,CH0SJ,wBG/SJ,YAQQ,iBHuSJ,yBG/SJ,YAWQ,gBACA,iBAGR,aACI,0BCtPJ,cAYI,0BAA2B,CAI3B,uCAAwC,CAXxC,qBAAsB,CAUlB,kBAAmB,CARvB,wBAAyB,CAErB,oBAAqB,CACjB,gBAAiB,CAGzB,uBAIJ,CAEA,0BAfI,aAAc,CAFd,iBA0BJ,CATA,YAOI,QAAS,CAFT,eAAgB,CAGhB,SACJ,CACA,kBAEI,YACJ,CACA,qBAEI,cAAe,CACf,WACJ,CAEA,qDAGI,+BAAuC,CAI/B,uBACZ,CAEA,aAMI,aAAc,CAFd,MAAO,CAGP,gBAAiB,CACjB,iBAAkB,CANlB,iBAAkB,CAClB,KAMJ,CACA,uCAKI,UAAW,CAFX,aAGJ,CACA,mBAEI,UACJ,CACA,4BAEI,iBACJ,CAEA,aAEI,YAAa,CACb,UAAW,CAEX,WAAY,CACZ,cACJ,CACA,uBAEI,WACJ,CACA,iBAEI,aACJ,CACA,+BAEI,YACJ,CACA,0BAEI,mBACJ,CACA,gCAEI,aACJ,CACA,4BAEI,iBACJ,CACA,6BAMI,4BAA6B,CAJ7B,aAAc,CAEd,WAGJ,CACA,0BACI,YACJ,CNpHA,2BAEI,6/KACJ,CAGA,WAEI,iBAAoB,CAEpB,iBAAkB,CADlB,eAAmB,CAGnB,+DAA6B,CAC7B,6UACJ,CAEA,wBAqBI,WAAY,CAHZ,cAAe,CATf,aAAc,CANd,WAAY,CASZ,WAAY,CARZ,aAAc,CASd,SAAU,CAPV,iBAAkB,CAClB,OAAQ,CAOR,kCAAqC,CAErC,0BAA6B,CAL7B,UAaJ,CACA,gGAFI,sBAAuB,CAHvB,iBAAkB,CAElB,YAWJ,CACA,oGAKI,SACJ,CACA,oEAGI,WACJ,CAEA,sCAUI,kCAAmC,CACnC,iCAAkC,CAHlC,UAAY,CALZ,iBAAoB,CACpB,cAAe,CACf,aAAc,CAEd,WAKJ,CAEA,YAEI,UACJ,CACA,sBAGI,SAAU,CADV,WAEJ,CACA,mBAEI,WACJ,CACA,6BAEI,WACJ,CAEA,YAEI,WACJ,CACA,sBAGI,UAAW,CADX,UAEJ,CACA,mBAEI,WACJ,CACA,6BAEI,WACJ,CAGA,2BAEI,kBACJ,CAEA,YAGI,YAAa,CAEb,aAAc,CAMd,eAAgB,CAFhB,QAAS,CADT,SAAU,CANV,iBAAkB,CAWlB,iBAAkB,CANlB,UAOJ,CACA,eAII,oBAAqB,CAIrB,YAAa,CACb,SAAU,CAPV,iBAUJ,CACA,qCAFI,cAAe,CAJf,WAAY,CADZ,UAwBJ,CAjBA,sBAgBI,sBAAuB,CAFvB,QAAS,CADT,iBAAkB,CARlB,aAAc,CAHd,WAAY,CACZ,aAAc,CAYd,YAAa,CANb,WAQJ,CACA,wDAGI,YACJ,CACA,sEAGI,SACJ,CACA,6BAmBI,kCAAmC,CACnC,iCAAkC,CAHlC,UAAY,CAJZ,WAAY,CAXZ,iBAAoB,CACpB,aAAc,CAQd,WAAY,CAHZ,MAAO,CAJP,gBAAiB,CAYjB,WAAY,CAVZ,iBAAkB,CAQlB,iBAAkB,CAPlB,KAAM,CAGN,UAWJ,CACA,0CAGI,UAAY,CADZ,WAEJ","sources":["../node_modules/slick-carousel/slick/slick-theme.css","Style/App.scss","Style/BreakPoints.scss","Style/FrontPage.scss","Style/Credit.scss","Style/WeatherPage.scss","../node_modules/slick-carousel/slick/slick.css"],"sourcesContent":["@charset 'UTF-8';\n/* Slider */\n.slick-loading .slick-list\n{\n    background: #fff url('./ajax-loader.gif') center center no-repeat;\n}\n\n/* Icons */\n@font-face\n{\n    font-family: 'slick';\n    font-weight: normal;\n    font-style: normal;\n\n    src: url('./fonts/slick.eot');\n    src: url('./fonts/slick.eot?#iefix') format('embedded-opentype'), url('./fonts/slick.woff') format('woff'), url('./fonts/slick.ttf') format('truetype'), url('./fonts/slick.svg#slick') format('svg');\n}\n/* Arrows */\n.slick-prev,\n.slick-next\n{\n    font-size: 0;\n    line-height: 0;\n\n    position: absolute;\n    top: 50%;\n\n    display: block;\n\n    width: 20px;\n    height: 20px;\n    padding: 0;\n    -webkit-transform: translate(0, -50%);\n    -ms-transform: translate(0, -50%);\n    transform: translate(0, -50%);\n\n    cursor: pointer;\n\n    color: transparent;\n    border: none;\n    outline: none;\n    background: transparent;\n}\n.slick-prev:hover,\n.slick-prev:focus,\n.slick-next:hover,\n.slick-next:focus\n{\n    color: transparent;\n    outline: none;\n    background: transparent;\n}\n.slick-prev:hover:before,\n.slick-prev:focus:before,\n.slick-next:hover:before,\n.slick-next:focus:before\n{\n    opacity: 1;\n}\n.slick-prev.slick-disabled:before,\n.slick-next.slick-disabled:before\n{\n    opacity: .25;\n}\n\n.slick-prev:before,\n.slick-next:before\n{\n    font-family: 'slick';\n    font-size: 20px;\n    line-height: 1;\n\n    opacity: .75;\n    color: white;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n.slick-prev\n{\n    left: -25px;\n}\n[dir='rtl'] .slick-prev\n{\n    right: -25px;\n    left: auto;\n}\n.slick-prev:before\n{\n    content: '←';\n}\n[dir='rtl'] .slick-prev:before\n{\n    content: '→';\n}\n\n.slick-next\n{\n    right: -25px;\n}\n[dir='rtl'] .slick-next\n{\n    right: auto;\n    left: -25px;\n}\n.slick-next:before\n{\n    content: '→';\n}\n[dir='rtl'] .slick-next:before\n{\n    content: '←';\n}\n\n/* Dots */\n.slick-dotted.slick-slider\n{\n    margin-bottom: 30px;\n}\n\n.slick-dots\n{\n    position: absolute;\n    bottom: -25px;\n\n    display: block;\n\n    width: 100%;\n    padding: 0;\n    margin: 0;\n\n    list-style: none;\n\n    text-align: center;\n}\n.slick-dots li\n{\n    position: relative;\n\n    display: inline-block;\n\n    width: 20px;\n    height: 20px;\n    margin: 0 5px;\n    padding: 0;\n\n    cursor: pointer;\n}\n.slick-dots li button\n{\n    font-size: 0;\n    line-height: 0;\n\n    display: block;\n\n    width: 20px;\n    height: 20px;\n    padding: 5px;\n\n    cursor: pointer;\n\n    color: transparent;\n    border: 0;\n    outline: none;\n    background: transparent;\n}\n.slick-dots li button:hover,\n.slick-dots li button:focus\n{\n    outline: none;\n}\n.slick-dots li button:hover:before,\n.slick-dots li button:focus:before\n{\n    opacity: 1;\n}\n.slick-dots li button:before\n{\n    font-family: 'slick';\n    font-size: 6px;\n    line-height: 20px;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 20px;\n    height: 20px;\n\n    content: '•';\n    text-align: center;\n\n    opacity: .25;\n    color: black;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n.slick-dots li.slick-active button:before\n{\n    opacity: .75;\n    color: black;\n}\n","* {\n  margin: 0;\n  padding: 0;\n  font-family: 'Montserrat', sans-serif;\n}\n.App{\n  height: 100vh;\n  background-image: linear-gradient(#000000, #3F4661);\n  overflow-x: hidden;\n}\n","///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px,\r\n  \"set1\":538px,\r\n  \"set2\":738px,\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}","@mixin center {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n@import \"./BreakPoints.scss\";\r\n.center-desk{\r\n    @include media (\">=desktop\"){\r\n        margin: 0 auto;\r\n        width: 90%;\r\n        max-width: 1100px;\r\n    }\r\n}\r\n.front-container{\r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n}\r\n.header{\r\n    display: flex;\r\n    @include media (\">=desktop\") {\r\n        width: 90%;\r\n        justify-content: space-between;\r\n        margin: 0 auto;\r\n    }\r\n    h1{\r\n        margin-top: 25px;\r\n        color: white;\r\n        text-align: center;\r\n        width: 100%;\r\n        font-size: 28px;\r\n        @include media (\">=desktop\") {\r\n            text-align: left;\r\n            margin: 30px auto 5px auto;\r\n        }\r\n    }\r\n    img{\r\n        width: 27px;\r\n        position: absolute;\r\n        top:25px;\r\n        right: 15px;\r\n        cursor: pointer;\r\n        @include media (\">=set1\"){\r\n            margin-right: 10%;\r\n        }\r\n        @include media (\">=desktop\") {\r\n            position: relative;\r\n            margin: 25px auto 5px auto;\r\n            top: 0px;\r\n        }\r\n        \r\n    }\r\n}\r\n.current-container{\r\n    margin-top: 70px;\r\n    text-align: center;\r\n    color:white;\r\n    @include media (\">=desktop\") {\r\n        width: 40%;\r\n        text-align: left;\r\n        margin: 80px 0 0 5%;\r\n    }\r\n    p{\r\n        font-size: 20px;\r\n        @include media (\">=desktop\") {\r\n            font-size: 24px;\r\n        }\r\n    }\r\n    h1{\r\n        font-size: 132px;\r\n        @include media (\">=desktop\") {\r\n            font-size: 140px;\r\n        }\r\n    }\r\n    span{\r\n        font-size: 90px;\r\n        position: absolute;\r\n    }\r\n    h4{\r\n        font-size: 24px;\r\n        margin: 10px 0 20px 0;\r\n        @include media (\">=desktop\") {\r\n            font-size: 28px;\r\n        }\r\n    }\r\n    \r\n}\r\n.details-btn{\r\n    position: relative;\r\n    color: white;\r\n    width: 60px;\r\n    margin:15vh auto 5vh auto;\r\n    z-index: 2;\r\n    cursor: pointer;\r\n    \r\n    img{\r\n        width: 30px;\r\n        margin: 0 15px;\r\n        z-index: 4;\r\n    }\r\n    p{\r\n        text-align: center;\r\n    }\r\n}\r\n.opened{\r\n    margin-top: 6vh;\r\n    transform: rotate(180deg);\r\n}\r\nbutton{\r\n    width: 80%;\r\n    max-width: 250px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    padding: 20px 40px;\r\n    border-radius: 30px;\r\n    border: none;\r\n    @include center();\r\n    bottom: 50px;\r\n    cursor: pointer;\r\n    @include media (\">=desktop\") {\r\n        position: relative;\r\n        transform: translateX(0);\r\n       left: 5%;\r\n       top: 35px;\r\n       border-radius: 15px;\r\n    }\r\n}\r\n.detail-container{\r\n    top: 90px;\r\n    @include center();\r\n    transform: translateX(-50%);\r\n    width: 80%;\r\n    height: 400px;\r\n    outline: solid white 1px;\r\n    border-radius: 25px;\r\n    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));\r\n    backdrop-filter: blur(10px);\r\n    -webkit-backdrop-filter: blur(10px);\r\n    border-radius: 20px;\r\n    border:1px solid rgba(255, 255, 255, 0.18);\r\n    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);\r\n    z-index: 0;\r\n    padding: 25px 0 10px 0 ;\r\n    @include media (\">=desktop\"){\r\n        max-width: 590px;\r\n        height: 300px;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        flex-direction: column;\r\n        transform: translateX(0);\r\n       top: 170px;\r\n       left: 40%;\r\n    }\r\n    .info-container{\r\n        width: 85%;\r\n        margin: 0px auto 10px auto;\r\n        color: white;\r\n        @include media (\">=desktop\"){\r\n            max-width: 220px;\r\n            height: 125px;\r\n        }\r\n        h4{\r\n            width: 100%;\r\n            font-size: 22px;\r\n            margin: 15px 0 10px 0 ;\r\n            @include media (\">=desktop\") {\r\n                font-size: 28px;\r\n            }\r\n        }\r\n        p{\r\n            @include media (\">=desktop\") {\r\n                font-size: 24px;\r\n            }\r\n        }\r\n        .det-cont{\r\n            display: flex;\r\n        p{\r\n            width: 120px;\r\n            margin: 5px 0 0px 0;\r\n            @include media (\">=desktop\") {\r\n                font-size: 24px;\r\n                width: 130px;\r\n            }\r\n        }\r\n        span{\r\n            margin: 5px 0 5px 0;\r\n            @include media (\">=desktop\") {\r\n                font-size: 24px;\r\n                width: 100px;\r\n            }\r\n        }\r\n        }\r\n    }\r\n}\r\n@media screen and ( max-height: 700px ){\r\n    .details-btn{\r\n        margin-top: 5vh;\r\n    }\r\n}","@import \"./BreakPoints.scss\";\r\n.credit-container{\r\n    z-index: 3;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));\r\n    backdrop-filter: blur(10px);\r\n    -webkit-backdrop-filter: blur(10px);\r\n    top: 0;\r\n    span{\r\n        position: absolute;\r\n        top: 20px;\r\n        color: white;\r\n        font-weight: 600;\r\n        font-size: 28px;\r\n        right: 18px;\r\n        cursor: pointer;\r\n        @include media (\">=set1\"){\r\n            margin-right: 10%;\r\n        }\r\n        @include media (\">=desktop\"){\r\n            right: 0;\r\n        }\r\n    }\r\n}\r\n.info-credit{\r\n    width: 90%;\r\n    max-width: 500px;\r\n    height: 450px;\r\n    position: relative;\r\n    top: 90px;\r\n    margin: 0 auto;\r\n    border-radius: 15px;\r\n    background-color: white;\r\n    padding: 30px 0 ;\r\n    h1{\r\n        font-size: 24px;\r\n        text-align: center;\r\n        margin-bottom: 100px;\r\n    }\r\n    h2{\r\n        font-size: 20px;\r\n        margin: 5px 7% ;\r\n    }\r\n    a{\r\n        display: block;\r\n        margin: 5px 7% ;\r\n        text-decoration: none;\r\n        color: rgb(36, 141, 240);\r\n    }\r\n    .visit-container{\r\n        width: 100%;\r\n        position: absolute;\r\n        bottom: 20px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        h2{\r\n            text-align: center;\r\n            margin: 0;\r\n        }\r\n        a{\r\n            text-align: center;\r\n            font-size: 22px;\r\n        }\r\n    }\r\n}","@import \"./BreakPoints.scss\";\r\n\r\n.w-container{\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgb(255, 255, 255);\r\n    top: 0;\r\n    z-index: 3;\r\n    overflow-x: hidden;\r\n    .w-header{\r\n    width: 100%;\r\n    margin-bottom: 0px;\r\n        img{\r\n        position: absolute;\r\n        top: 20px;\r\n        left: 0px;\r\n        margin: 0 25px;\r\n        transform: rotate(-90deg);\r\n        width: 24px;\r\n        @include media (\">=desktop\"){\r\n            margin-left: 7%;\r\n            top: 25px;\r\n        }\r\n        cursor: pointer;\r\n        }\r\n        h1{\r\n        font-size: 24px;\r\n        margin: 20px 0;\r\n        text-align: center;\r\n        @include media (\">=desktop\"){\r\n            font-size: 28px;\r\n        }\r\n    }}\r\n    .select-cont{\r\n    margin : 30px 0 0 0;\r\n    display: flex;\r\n        h4{\r\n        margin: 2px 5px 0 25px;\r\n        };\r\n        select{\r\n        outline: none;\r\n        border: 1px solid;\r\n        border-radius:5px ;\r\n        padding: 2px 5px;\r\n        font-weight: 600;\r\n        @include media (\">=desktop\"){\r\n            margin: 3px  0  0 5px;\r\n        }\r\n        }\r\n        @include media (\">=desktop\"){\r\n            margin-left: 10%;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n}\r\n.allwth-cont{\r\n    display: flex;\r\n    flex-wrap:  wrap;\r\n    width: 100%;\r\n    max-width: 370px;\r\n    margin: 20px auto;\r\n}\r\n.wcard-cont{\r\n    position: relative;\r\n    width: 165px;\r\n    height: 75px;\r\n    border-radius: 10px;\r\n    background-image: linear-gradient(120deg,#5A97CE, #F36A44);\r\n    color: white;\r\n    display: flex;\r\n    cursor: pointer;\r\n    margin: 10px 2px 5px 6px;\r\n    .wcard-info{\r\n        width: 100%;\r\n        h4{\r\n            padding: 10px 0 0 10px;\r\n            font-size: 18px ;\r\n        }\r\n        p{\r\n            font-size: 11px;\r\n            margin: 2px 0 0 10px;\r\n            font-weight: 500;\r\n        }\r\n    }\r\n    .wcard-img{\r\n        width: 70px;\r\n        margin: 10px 10px 0 0 ;\r\n        img{\r\n            display: block;\r\n            width: 30px;\r\n            margin: 0px auto 5px auto;\r\n            background: linear-gradient(135deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));\r\n            backdrop-filter: blur(10px);\r\n            -webkit-backdrop-filter: blur(10px);\r\n            border-radius: 50%;\r\n            border:1px solid rgba(255, 255, 255, 0.18);\r\n            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.555);\r\n        }\r\n        p{\r\n            font-size: 12px;\r\n            font-weight: 500;\r\n            text-align: center;\r\n        }\r\n    }\r\n}\r\n.nowrap{\r\n    flex-wrap: nowrap;\r\n    overflow-x: auto;\r\n    margin: 10px 0 0 0;\r\n}\r\n\r\n.w-all-cont{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 590px;\r\n}\r\n.detail-container1{\r\n    top: 90px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 80%;\r\n    height: 400px;\r\n    outline: solid white 1px;\r\n    border-radius: 25px;\r\n    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));\r\n    backdrop-filter: blur(7px);\r\n    -webkit-backdrop-filter: blur(7px);\r\n    border-radius: 20px;\r\n    border:1px solid rgba(255, 255, 255, 0.023);\r\n    box-shadow: 0 8px 10px 0 rgba(0, 0, 0, 0.37);\r\n    z-index: 0;\r\n    padding: 25px 0 10px 0 ;\r\n    @include media (\">=desktop\"){\r\n        max-width: 590px;\r\n        height: 350px;\r\n        display: block;\r\n       top: 190px;\r\n       left: 50%;\r\n       transform: translateX(-50%);\r\n    }\r\n    .info-container{\r\n        width: 85%;\r\n        margin: 0px auto 0px auto;\r\n        color: white;\r\n        @include media (\">=desktop\"){\r\n            max-width: 220px;\r\n            height: 125px;\r\n        }\r\n        h4{\r\n            width: 100%;\r\n            font-size: 22px;\r\n            margin: 15px 0 10px 0 ;\r\n            @include media (\">=desktop\") {\r\n                font-size: 28px;\r\n            }\r\n        }\r\n        p{\r\n            @include media (\">=desktop\") {\r\n                font-size: 24px;\r\n            }\r\n        }\r\n        .det-cont{\r\n            display: flex;\r\n        p{\r\n            width: 120px;\r\n            margin: 5px 0 0px 0;\r\n            @include media (\">=desktop\") {\r\n                font-size: 24px;\r\n                width: 130px;\r\n            }\r\n        }\r\n        span{\r\n            margin: 5px 0 5px 0;\r\n            @include media (\">=desktop\") {\r\n                font-size: 24px;\r\n                width: 100px;\r\n            }\r\n        }\r\n        }\r\n    }\r\n}\r\n.details-2{\r\n    width: 300px;\r\n    top: 20px;\r\n    padding: 0 0 70px 0;\r\n    color: black;\r\n    position: relative;\r\n    @include media (\">=desktop\"){\r\n        top: 30px;\r\n        width: 590px;\r\n    }\r\n}\r\n.detail-date-cont{\r\n    font-size: 20px;\r\n    margin-top: 20px;\r\n    color: white;\r\n    text-align: center;\r\n    @include media (\">=desktop\"){\r\n        font-size: 24px;\r\n        margin-bottom: 20px;\r\n    }\r\n}\r\n.background-span{\r\n    position: absolute;\r\n    top:225px ;\r\n    width: 300px;\r\n    height: 472px;\r\n    background-image: linear-gradient(120deg,#5A97CE, #F36A44);\r\n    z-index: -1;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    border-radius: 20px;\r\n    @include media (\">=desktop\"){\r\n        width: 590px;\r\n        height: 420px;\r\n        top:248px ;\r\n    }\r\n}\r\n.btn-close{\r\n    position: absolute;\r\n    color: white;\r\n    font-weight: 600;\r\n    right: 20px;\r\n    top: 20px;\r\n    cursor: pointer;\r\n}\r\n\r\n.slick-slide {\r\n    margin: 0 0px;\r\n}\r\n.slide-cont{\r\n    width: 99%;\r\n    max-width:355px;\r\n    margin: 10px  auto 0 auto;\r\n    @include media(\">=set1\"){\r\n        max-width:527px ;\r\n    }\r\n    @include media (\">=set2\"){\r\n        max-width: 710px;\r\n    }\r\n    @include media (\">=desktop\"){\r\n        margin-top: 15px;\r\n        max-width: 880px;\r\n    }\r\n}\r\n.card-active{\r\n    outline: #7ab3e4 3px solid;\r\n}","/* Slider */\n.slick-slider\n{\n    position: relative;\n\n    display: block;\n    box-sizing: border-box;\n\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-touch-action: pan-y;\n        touch-action: pan-y;\n    -webkit-tap-highlight-color: transparent;\n}\n\n.slick-list\n{\n    position: relative;\n\n    display: block;\n    overflow: hidden;\n\n    margin: 0;\n    padding: 0;\n}\n.slick-list:focus\n{\n    outline: none;\n}\n.slick-list.dragging\n{\n    cursor: pointer;\n    cursor: hand;\n}\n\n.slick-slider .slick-track,\n.slick-slider .slick-list\n{\n    -webkit-transform: translate3d(0, 0, 0);\n       -moz-transform: translate3d(0, 0, 0);\n        -ms-transform: translate3d(0, 0, 0);\n         -o-transform: translate3d(0, 0, 0);\n            transform: translate3d(0, 0, 0);\n}\n\n.slick-track\n{\n    position: relative;\n    top: 0;\n    left: 0;\n\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n}\n.slick-track:before,\n.slick-track:after\n{\n    display: table;\n\n    content: '';\n}\n.slick-track:after\n{\n    clear: both;\n}\n.slick-loading .slick-track\n{\n    visibility: hidden;\n}\n\n.slick-slide\n{\n    display: none;\n    float: left;\n\n    height: 100%;\n    min-height: 1px;\n}\n[dir='rtl'] .slick-slide\n{\n    float: right;\n}\n.slick-slide img\n{\n    display: block;\n}\n.slick-slide.slick-loading img\n{\n    display: none;\n}\n.slick-slide.dragging img\n{\n    pointer-events: none;\n}\n.slick-initialized .slick-slide\n{\n    display: block;\n}\n.slick-loading .slick-slide\n{\n    visibility: hidden;\n}\n.slick-vertical .slick-slide\n{\n    display: block;\n\n    height: auto;\n\n    border: 1px solid transparent;\n}\n.slick-arrow.slick-hidden {\n    display: none;\n}\n"],"names":[],"sourceRoot":""}